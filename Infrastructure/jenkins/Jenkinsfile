pipeline {
    agent {
    kubernetes {
        label 'jenkins-agent'
        yamlFile 'Infrastructure/jenkins/runner.yaml' //not sure about path
        defaultContainer 'builder'
        }
    }
    stages{
     stage("Checkout code") {
        steps {
            checkout scm
            }
        }
        stage('echo') {
            steps {
               echo "so far so good"
                }
            }
        }
/*    environment {
        DOCKER_IMAGE = 'noabl/flask-app'
        DOCKERHUB_CREDENTIALS = 'docker-cred'
        GITHUB_CREDENTIALS = 'github-token'
        DOCKER_TAG = 'latest'
        FEATURE_BRANCH = 'feature'
        REPO_URL = 'https://github.com/noa-bl/FinalProject.git'
        APPLICATION_DIR = 'Application'
        VERSION = "${env.BUILD_NUMBER}"
    }
    
    stages {
            stage("Checkout code") {
            steps {
                checkout scm
                }
            }
            stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_IMAGE}:${VERSION}", "-f Dockerfile.app ${APPLICATION_DIR}")
                //change according to future structure
                }
                }
            }
            
            stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    //????
                    docker.withRegistry('https://index.docker.io/v1/', DOCKERHUB_CREDENTIALS) 
                    {
                        docker.image("${DOCKER_IMAGE}:${VERSION}").push()
                    }
                }
            }
        }
        
        stage('Run Tests') { //pytest?
            steps {
                script {
                    sh "docker-compose -f docker-compose.yaml up --build --abort-on-container-exit"
                }
            }
        }

        stage('Debug Working Directory') { //?
            steps {
                script {
                    sh 'pwd'
                    sh 'ls -la'
                }
            }
        }
         //Push changes stage
         //what about main branch?
    }
    post {
        always {
            script {
                currentBuild.result = 'SUCCESS'
            }
        }
    }
    */



}
