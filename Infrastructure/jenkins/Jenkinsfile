pipeline {
    agent {
        kubernetes {
            inheritFrom 'jenkins-runner'
            yamlFile 'Infrastructure/jenkins/runner.yaml'
            defaultContainer 'builder'
        }
    }
    environment {
        DOCKER_CREDENTIALS = 'docker-cred'
        GITHUB_CREDENTIALS = 'github-token'
        REPO_URL = 'https://github.com/noa-bl/FinalProject.git'
        GITHUB_REPO = 'noa-bl/FinalProject'
        DOCKER_IMAGE = 'noabl/flask-app'
        TEST_IMAGE = 'noabl/flask-test'
        APPLICATION_DIR = 'Application'
        FEATURE_BRANCH = 'feature'
        VERSION = 'latest'
        GITHUB_API_URL = 'https://api.github.com'
        EMAIL_RECIPIENTS = 'noablfdev@gmail.com'
        EMAIL_CREDENTIALS = credentials('email-cred')
        HELM_REPO = 'noabl/helm-charts'
        HELM_EXPERIMENTAL_OCI = '1' // Enable OCI support for Helm
        

    }
       stages{
         stage('Checkout SCM') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/feature'], [name: '*/master']], //change later
                    userRemoteConfigs: [[
                        url: "${REPO_URL}",
                        credentialsId: GITHUB_CREDENTIALS
                    ]]
                ])
            }
         }

        stage('Login to Docker') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: "${DOCKER_CREDENTIALS}", usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh """
                            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
                        """
                    }
                }
            }
        }
    }
    }
    